name: Deploy Website

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Format
        run: terraform fmt

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

  
  Sync_S3:
    name: Build and sync react app to S3 Bucket
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install
        working-directory: ./website

      - name: Build app
        run: npm run build
        working-directory: ./website

      - name: Upload to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete --exclude '.DS_Store'
        env:
          SOURCE_DIR: website/dist/
          AWS_S3_BUCKET: "s3ra-bucket"  
          AWS_REGION: "eu-west-2"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


  Invalidate_CloudFront:
    name: Invalidate CloudFront Distribution
    needs: Sync_S3
    runs-on: ubuntu-latest

    steps:
      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2

        env:
          DISTRIBUTION: ${{ secrets.DISTRIBUTION_ID }}  
          PATHS: "/*"
          AWS_REGION: "us-east-1"  
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}